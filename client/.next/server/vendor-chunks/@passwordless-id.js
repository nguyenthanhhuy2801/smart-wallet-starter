"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@passwordless-id";
exports.ids = ["vendor-chunks/@passwordless-id"];
exports.modules = {

/***/ "(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/authenticatorMetadata.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@passwordless-id/webauthn/dist/esm/authenticatorMetadata.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authenticatorMetadata: () => (/* binding */ authenticatorMetadata)\n/* harmony export */ });\n/**\n * The source comes from\n * \"official\" https://mds.fidoalliance.org/\n * and the\n * \"community-driven\" https://github.com/passkeydeveloper/passkey-authenticator-aaguids\n * combined together.\n */\nconst authenticatorMetadata = {\n    \"00000000-0000-0000-0000-000000000000\": \"Unknown authenticator\",\n    \"0076631b-d4a0-427f-5773-0ec71c9e0279\": \"HYPR FIDO2 Authenticator\",\n    \"07a9f89c-6407-4594-9d56-621d5f1e358b\": \"NXP Semiconductros FIDO2 Conformance Testing CTAP2 Authenticator\",\n    \"08987058-cadc-4b81-b6e1-30de50dcbe96\": \"Windows Hello\",\n    \"09591fc6-9811-48f7-8f57-b9f23df6413f\": \"Pone Biometrics OFFPAD Authenticator\",\n    \"0acf3011-bc60-f375-fb53-6f05f43154e0\": \"Nymi FIDO2 Authenticator\",\n    \"0bb43545-fd2c-4185-87dd-feb0b2916ace\": \"Security Key NFC by Yubico - Enterprise Edition\",\n    \"0d9b2e56-566b-c393-2940-f821b7f15d6d\": \"Excelsecu eSecu FIDO2 Pro Security Key\",\n    \"0ea242b4-43c4-4a1b-8b17-dd6d0b6baec6\": \"Keeper\",\n    \"1105e4ed-af1d-02ff-ffff-ffffffffffff\": \"Egomet FIDO2 Authenticator for Android\",\n    \"12ded745-4bed-47d4-abaa-e713f51d6393\": \"Feitian AllinOne FIDO2 Authenticator\",\n    \"149a2021-8ef6-4133-96b8-81f8d5b7f1f5\": \"Security Key by Yubico with NFC\",\n    \"17290f1e-c212-34d0-1423-365d729f09d9\": \"Thales PIN iOS SDK\",\n    \"175cd298-83d2-4a26-b637-313c07a6434e\": \"Chunghwa Telecom FIDO2 Smart Card Authenticator\",\n    \"1c086528-58d5-f211-823c-356786e36140\": \"Atos CardOS FIDO2\",\n    \"20f0be98-9af9-986a-4b42-8eca4acb28e4\": \"Excelsecu eSecu FIDO2 Fingerprint Security Key\",\n    \"2194b428-9397-4046-8f39-007a1605a482\": \"IDPrime 931 Fido\",\n    \"23786452-f02d-4344-87ed-aaf703726881\": \"SafeNet eToken Fusion CC\",\n    \"2c0df832-92de-4be1-8412-88a8f074df4a\": \"Feitian FIDO Smart Card\",\n    \"2d3bec26-15ee-4f5d-88b2-53622490270b\": \"HID Crescendo Key V2\",\n    \"2fc0579f-8113-47ea-b116-bb5a8db9202a\": \"YubiKey 5 Series with NFC\",\n    \"2ffd6452-01da-471f-821b-ea4bf6c8676a\": \"IDPrime 941 Fido\",\n    \"30b5035e-d297-4fc1-b00b-addc96ba6a97\": \"OneSpan FIDO Touch\",\n    \"30b5035e-d297-4ff1-b00b-addc96ba6a98\": \"OneSpan DIGIPASS FX1 BIO\",\n    \"341e4da9-3c2e-8103-5a9f-aad887135200\": \"Ledger Nano S FIDO2 Authenticator\",\n    \"34f5766d-1536-4a24-9033-0e294e510fb0\": \"YubiKey 5 Series CTAP2.1 Preview Expired \",\n    \"361a3082-0278-4583-a16f-72a527f973e4\": \"eWBM eFA500 FIDO2 Authenticator\",\n    \"3789da91-f943-46bc-95c3-50ea2012f03a\": \"NEOWAVE Winkeo FIDO2\",\n    \"39a5647e-1853-446c-a1f6-a79bae9f5bc7\": \"IDmelon\",\n    \"3b1adb99-0dfe-46fd-90b8-7f7614a4de2a\": \"GoTrust Idem Key FIDO2 Authenticator\",\n    \"3e078ffd-4c54-4586-8baa-a77da113aec5\": \"Hideez Key 3 FIDO2\",\n    \"3e22415d-7fdf-4ea4-8a0c-dd60c4249b9d\": \"Feitian iePass FIDO Authenticator\",\n    \"3f59672f-20aa-4afe-b6f4-7e5e916b6d98\": \"Arculus FIDO 2.1 Key Card [P71]\",\n    \"42b4fb4a-2866-43b2-9bf7-6c6669c2e5d3\": \"Google Titan Security Key v2\",\n    \"454e5346-4944-4ffd-6c93-8e9267193e9a\": \"Ensurity ThinC\",\n    \"4b3f8944-d4f2-4d21-bb19-764a986ec160\": \"KeyXentic FIDO2 Secp256R1 FIDO2 CTAP2 Authenticator\",\n    \"4c0cf95d-2f40-43b5-ba42-4c83a11c04ba\": \"Feitian BioPass FIDO2 Pro Authenticator\",\n    \"4c50ff10-1057-4fc6-b8ed-43a529530c3c\": \"ImproveID Authenticator\",\n    \"4d41190c-7beb-4a84-8018-adf265a6352d\": \"Thales IDPrime FIDO Bio\",\n    \"4e768f2c-5fab-48b3-b300-220eb487752b\": \"Hideez Key 4 FIDO2 SDK\",\n    \"504d7149-4e4c-3841-4555-55445a677357\": \"WiSECURE AuthTron USB FIDO2 Authenticator\",\n    \"50a45b0c-80e7-f944-bf29-f552bfa2e048\": \"ACS FIDO Authenticator\",\n    \"516d3969-5a57-5651-5958-4e7a49434167\": \"SmartDisplayer BobeePass FIDO2 Authenticator\",\n    \"531126d6-e717-415c-9320-3d9aa6981239\": \"Dashlane\",\n    \"53414d53-554e-4700-0000-000000000000\": \"Samsung Pass\",\n    \"5343502d-5343-5343-6172-644649444f32\": \"ESS Smart Card Inc. Authenticator\",\n    \"54d9fee8-e621-4291-8b18-7157b99c5bec\": \"HID Crescendo Enabled\",\n    \"5626bed4-e756-430b-a7ff-ca78c8b12738\": \"VALMIDO PRO FIDO\",\n    \"58b44d0b-0a7c-f33a-fd48-f7153c871352\": \"Ledger Nano S Plus FIDO2 Authenticator\",\n    \"5ca1ab1e-1337-fa57-f1d0-a117e71ca702\": \"Allthenticator App: roaming BLE FIDO2 Allthenticator for Windows, Mac, Linux, and Allthenticate door readers\",\n    \"5d629218-d3a5-11ed-afa1-0242ac120002\": \"Swissbit iShield Key Pro\",\n    \"5fdb81b8-53f0-4967-a881-f5ec26fe4d18\": \"VinCSS FIDO2 Authenticator\",\n    \"6002f033-3c07-ce3e-d0f7-0ffe5ed42543\": \"Excelsecu eSecu FIDO2 Fingerprint Key\",\n    \"6028b017-b1d4-4c02-b4b3-afcdafc96bb2\": \"Windows Hello\",\n    \"61250591-b2bc-4456-b719-0b17be90bb30\": \"eWBM eFPA FIDO2 Authenticator\",\n    \"664d9f67-84a2-412a-9ff7-b4f7d8ee6d05\": \"OpenSK authenticator\",\n    \"66a0ccb3-bd6a-191f-ee06-e375c50b9846\": \"Thales Bio iOS SDK\",\n    \"692db549-7ae5-44d5-a1e5-dd20a493b723\": \"HID Crescendo Key\",\n    \"69700f79-d1fb-472e-bd9b-a3a3b9a9eda0\": \"Pone Biometrics OFFPAD Authenticator\",\n    \"6d44ba9b-f6ec-2e49-b930-0c8fe920cb73\": \"Security Key by Yubico with NFC\",\n    \"73402251-f2a8-4f03-873e-3cb6db604b03\": \"uTrust FIDO2 Security Key\",\n    \"73bb0cd4-e502-49b8-9c6f-b59445bf720b\": \"YubiKey 5 FIPS Series\",\n    \"74820b05-a6c9-40f9-8fb0-9f86aca93998\": \"SafeNet eToken Fusion\",\n    \"77010bd7-212a-4fc9-b236-d2ca5e9d4084\": \"Feitian BioPass FIDO2 Authenticator\",\n    \"771b48fd-d3d4-4f74-9232-fc157ab0507a\": \"Edge on Mac\",\n    \"7e3f3d30-3557-4442-bdae-139312178b39\": \"RSA DS100\",\n    \"820d89ed-d65a-409e-85cb-f73f0578f82a\": \"IDmelon iOS Authenticator\",\n    \"833b721a-ff5f-4d00-bb2e-bdda3ec01e29\": \"Feitian ePass FIDO2 Authenticator\",\n    \"83c47309-aabb-4108-8470-8be838b573cb\": \"YubiKey Bio Series (Enterprise Profile)\",\n    \"85203421-48f9-4355-9bc8-8a53846e5083\": \"YubiKey 5 FIPS Series with Lightning\",\n    \"87dbc5a1-4c94-4dc8-8a47-97d800fd1f3c\": \"eWBM eFA320 FIDO2 Authenticator\",\n    \"8836336a-f590-0921-301d-46427531eee6\": \"Thales Bio Android SDK\",\n    \"8876631b-d4a0-427f-5773-0ec71c9e0279\": \"Solo Secp256R1 FIDO2 CTAP2 Authenticator\",\n    \"88bbd2f0-342a-42e7-9729-dd158be5407a\": \"Precision InnaIT Key FIDO 2 Level 2 certified\",\n    \"8976631b-d4a0-427f-5773-0ec71c9e0279\": \"Solo Tap Secp256R1 FIDO2 CTAP2 Authenticator\",\n    \"89b19028-256b-4025-8872-255358d950e4\": \"Sentry Enterprises CTAP2 Authenticator\",\n    \"8c97a730-3f7b-41a6-87d6-1e9b62bda6f0\": \"FT-JCOS FIDO Fingerprint Card\",\n    \"8d1b1fcb-3c76-49a9-9129-5515b346aa02\": \"IDEMIA ID-ONE Card\",\n    \"91ad6b93-264b-4987-8737-3a690cad6917\": \"Token Ring FIDO2 Authenticator\",\n    \"931327dd-c89b-406c-a81e-ed7058ef36c6\": \"Swissbit iShield Key FIDO2\",\n    \"95442b2e-f15e-4def-b270-efb106facb4e\": \"eWBM eFA310 FIDO2 Authenticator\",\n    \"95e4d58c-056e-4a65-866d-f5a69659e880\": \"TruU Windows Authenticator\",\n    \"973446ca-e21c-9a9b-99f5-9b985a67af0f\": \"ACS FIDO Authenticator Card\",\n    \"9876631b-d4a0-427f-5773-0ec71c9e0279\": \"Somu Secp256R1 FIDO2 CTAP2 Authenticator\",\n    \"998f358b-2dd2-4cbe-a43a-e8107438dfb3\": \"OnlyKey Secp256R1 FIDO2 CTAP2 Authenticator\",\n    \"99bf4610-ec26-4252-b31f-7380ccd59db5\": \"ZTPass Card\",\n    \"9c835346-796b-4c27-8898-d6032f515cc5\": \"Cryptnox FIDO2\",\n    \"9d3df6ba-282f-11ed-a261-0242ac120002\": \"Arculus FIDO2/U2F Key Card\",\n    \"9ddd1817-af5a-4672-a2b9-3e3dd95000a9\": \"Windows Hello\",\n    \"9f0d8150-baa5-4c00-9299-ad62c8bb4e87\": \"GoTrust Idem Card FIDO2 Authenticator\",\n    \"9f77e279-a6e2-4d58-b700-31e5943c6a98\": \"Hyper FIDO Pro\",\n    \"a1f52be5-dfab-4364-b51c-2bd496b14a56\": \"OCTATCO EzFinger2 FIDO2 AUTHENTICATOR\",\n    \"a3975549-b191-fd67-b8fb-017e2917fdb3\": \"Excelsecu eSecu FIDO2 NFC Security Key\",\n    \"a4e9fc6d-4cbe-4758-b8ba-37598bb5bbaa\": \"Security Key NFC by Yubico\",\n    \"ab32f0c6-2239-afbb-c470-d2ef4e254db6\": \"TEST (DUMMY RECORD)\",\n    \"ab32f0c6-2239-afbb-c470-d2ef4e254db7\": \"TOKEN2 FIDO2 Security Key\",\n    \"adce0002-35bc-c60a-648b-0b25f1f05503\": \"Chrome on Mac\",\n    \"aeb6569c-f8fb-4950-ac60-24ca2bbe2e52\": \"HID Crescendo C2300\",\n    \"b267239b-954f-4041-a01b-ee4f33c145b6\": \"authenton1 - CTAP2.1\",\n    \"b50d5e0a-7f81-4959-9b12-f45407407503\": \"IDPrime 3940 FIDO\",\n    \"b5397666-4885-aa6b-cebf-e52262a439a2\": \"Chromium Browser\",\n    \"b6ede29c-3772-412c-8a78-539c1f4c62d2\": \"Feitian BioPass FIDO2 Plus Authenticator\",\n    \"b84e4048-15dc-4dd0-8640-f4f60813c8af\": \"NordPass\",\n    \"b92c3f9a-c014-4056-887f-140a2501163b\": \"Security Key by Yubico\",\n    \"b93fd961-f2e6-462f-b122-82002247de78\": \"Android Authenticator with SafetyNet Attestation\",\n    \"ba76a271-6eb6-4171-874d-b6428dbe3437\": \"ATKey.ProS\",\n    \"ba86dc56-635f-4141-aef6-00227b1b9af6\": \"TruU Windows Authenticator\",\n    \"bada5566-a7aa-401f-bd96-45619a55120d\": \"1Password\",\n    \"bbf4b6a7-679d-f6fc-c4f2-8ac0ddf9015a\": \"Excelsecu eSecu FIDO2 PRO Security Key\",\n    \"bc2fe499-0d8e-4ffe-96f3-94a82840cf8c\": \"OCTATCO EzQuant FIDO2 AUTHENTICATOR\",\n    \"be727034-574a-f799-5c76-0929e0430973\": \"Crayonic KeyVault K1 (USB-NFC-BLE FIDO2 Authenticator)\",\n    \"c1f9a0bc-1dd2-404a-b27f-8e29047a43fd\": \"YubiKey 5 FIPS Series with NFC\",\n    \"c5703116-972b-4851-a3e7-ae1259843399\": \"NEOWAVE Badgeo FIDO2\",\n    \"c5ef55ff-ad9a-4b9f-b580-adebafe026d0\": \"YubiKey 5 Series with Lightning\",\n    \"c80dbd9a-533f-4a17-b941-1a2f1c7cedff\": \"HID Crescendo C3000\",\n    \"ca4cff1b-5a81-4404-8194-59aabcf1660b\": \"IDPrime 3930 FIDO\",\n    \"ca87cb70-4c1b-4579-a8e8-4efdd7c007e0\": \"FIDO Alliance TruU Sample FIDO2 Authenticator\",\n    \"cb69481e-8ff7-4039-93ec-0a2729a154a8\": \"YubiKey 5 Series\",\n    \"cd69adb5-3c7a-deb9-3177-6800ea6cb72a\": \"Thales PIN Android SDK\",\n    \"cdbdaea2-c415-5073-50f7-c04e968640b6\": \"Excelsecu eSecu FIDO2 Security Key\",\n    \"cfcb13a2-244f-4b36-9077-82b79d6a7de7\": \"USB/NFC Passcode Authenticator\",\n    \"d384db22-4d50-ebde-2eac-5765cf1e2a44\": \"Excelsecu eSecu FIDO2 Fingerprint Security Key\",\n    \"d41f5a69-b817-4144-a13c-9ebd6d9254d6\": \"ATKey.Card CTAP2.0\",\n    \"d548826e-79b4-db40-a3d8-11116f7e8349\": \"Bitwarden\",\n    \"d61d3b87-3e7c-4aea-9c50-441c371903ad\": \"KeyVault Secp256R1 FIDO2 CTAP2 Authenticator\",\n    \"d7a423ad-3e19-4492-9200-78137dccc136\": \"VivoKey Apex FIDO2\",\n    \"d821a7d4-e97c-4cb6-bd82-4237731fd4be\": \"Hyper FIDO Bio Security Key\",\n    \"d8522d9f-575b-4866-88a9-ba99fa02f35b\": \"YubiKey Bio Series\",\n    \"d91c5288-0ef0-49b7-b8ae-21ca0aa6b3f3\": \"KEY-ID FIDO2 Authenticator\",\n    \"d94a29d9-52dd-4247-9c2d-8b818b610389\": \"VeriMark Guard Fingerprint Key\",\n    \"da1fa263-8b25-42b6-a820-c0036f21ba7f\": \"ATKey.Card NFC\",\n    \"dd4ec289-e01d-41c9-bb89-70fa845d4bf2\": \"iCloud Keychain (Managed)\",\n    \"e1a96183-5016-4f24-b55b-e3ae23614cc6\": \"ATKey.Pro CTAP2.0\",\n    \"e416201b-afeb-41ca-a03d-2281c28322aa\": \"ATKey.Pro CTAP2.1\",\n    \"e86addcd-7711-47e5-b42a-c18257b0bf61\": \"IDCore 3121 Fido\",\n    \"ea9b8d66-4d01-1d21-3ce4-b6b48cb575d4\": \"Google Password Manager\",\n    \"eabb46cc-e241-80bf-ae9e-96fa6d2975cf\": \"TOKEN2 PIN Plus Security Key Series \",\n    \"eb3b131e-59dc-536a-d176-cb7306da10f5\": \"ellipticSecure MIRkey USB Authenticator\",\n    \"ec31b4cc-2acc-4b8e-9c01-bade00ccbe26\": \"KeyXentic FIDO2 Secp256R1 FIDO2 CTAP2 Authenticator\",\n    \"ee041bce-25e5-4cdb-8f86-897fd6418464\": \"Feitian ePass FIDO2-NFC Authenticator\",\n    \"ee882879-721c-4913-9775-3dfcce97072a\": \"YubiKey 5 Series\",\n    \"efb96b10-a9ee-4b6c-a4a9-d32125ccd4a4\": \"Safenet eToken FIDO\",\n    \"f3809540-7f14-49c1-a8b3-8f813b225541\": \"Enpass\",\n    \"f4c63eff-d26c-4248-801c-3736c7eaa93a\": \"FIDO KeyPass S3\",\n    \"f7c558a0-f465-11e8-b568-0800200c9a66\": \"KONAI Secp256R1 FIDO2 Conformance Testing CTAP2 Authenticator\",\n    \"f8a011f3-8c0a-4d15-8006-17111f9edc7d\": \"Security Key by Yubico\",\n    \"fa2b99dc-9e39-4257-8f92-4a30d23c4118\": \"YubiKey 5 Series with NFC\",\n    \"fbefdf68-fe86-0106-213e-4d5fa24cbe2e\": \"Excelsecu eSecu FIDO2 NFC Security Key\",\n    \"fbfc3007-154e-4ecc-8c0b-6e020557d7bd\": \"iCloud Keychain\",\n    \"fcb1bcb4-f370-078c-6993-bc24d0ae3fbe\": \"Ledger Nano X FIDO2 Authenticator\",\n    \"fec067a1-f1d0-4c5e-b4c0-cc3237475461\": \"KX701 SmartToken FIDO\",\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/authenticatorMetadata.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/authenticators.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@passwordless-id/webauthn/dist/esm/authenticators.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extractAaguid: () => (/* binding */ extractAaguid),\n/* harmony export */   parseAuthBuffer: () => (/* binding */ parseAuthBuffer),\n/* harmony export */   resolveAuthenticatorName: () => (/* binding */ resolveAuthenticatorName),\n/* harmony export */   updateDevicesMetadata: () => (/* binding */ updateDevicesMetadata)\n/* harmony export */ });\n/* harmony import */ var _authenticatorMetadata_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./authenticatorMetadata.js */ \"(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/authenticatorMetadata.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/utils.js\");\n\n\nfunction parseAuthBuffer(authData) {\n    //console.debug(authData)\n    let flags = new DataView(authData.slice(32, 33)).getUint8(0);\n    //console.debug(flags)\n    // https://w3c.github.io/webauthn/#sctn-authenticator-data\n    let parsed = {\n        rpIdHash: _utils_js__WEBPACK_IMPORTED_MODULE_1__.toBase64url(authData.slice(0, 32)),\n        flags: {\n            userPresent: !!(flags & 1),\n            //reserved1: !!(flags & 2),\n            userVerified: !!(flags & 4),\n            backupEligibility: !!(flags & 8),\n            backupState: !!(flags & 16),\n            //reserved2: !!(flags & 32),\n            attestedData: !!(flags & 64),\n            extensionsIncluded: !!(flags & 128)\n        },\n        counter: new DataView(authData.slice(33, 37)).getUint32(0, false), // Big-Endian!\n    };\n    // this is more descriptive than \"backupState\"\n    parsed.synced = parsed.flags.backupState;\n    if (authData.byteLength > 37) {\n        // registration contains additional data\n        const aaguid = extractAaguid(authData); // bytes 37->53\n        // https://w3c.github.io/webauthn/#attested-credential-data\n        parsed = {\n            ...parsed,\n            aaguid,\n            name: _authenticatorMetadata_js__WEBPACK_IMPORTED_MODULE_0__.authenticatorMetadata[aaguid] ?? 'Unknown',\n            icon_light: 'https://webauthn.passwordless.id/authenticators/' + aaguid + '-light.png',\n            icon_dark: 'https://webauthn.passwordless.id/authenticators/' + aaguid + '-dark.png',\n        };\n    }\n    return parsed;\n}\nfunction extractAaguid(authData) {\n    return formatAaguid(authData.slice(37, 53)); // 16 bytes\n}\nfunction formatAaguid(buffer) {\n    let aaguid = _utils_js__WEBPACK_IMPORTED_MODULE_1__.bufferToHex(buffer);\n    aaguid = aaguid.substring(0, 8) + '-' + aaguid.substring(8, 12) + '-' + aaguid.substring(12, 16) + '-' + aaguid.substring(16, 20) + '-' + aaguid.substring(20, 32);\n    return aaguid; // example: \"d41f5a69-b817-4144-a13c-9ebd6d9254d6\"\n}\n/**\n * Kept for compatibility purposes.\n * @deprecated\n */\nfunction resolveAuthenticatorName(aaguid) {\n    const aaguidMetadata = updatedAuthenticatorMetadata ?? _authenticatorMetadata_js__WEBPACK_IMPORTED_MODULE_0__.authenticatorMetadata; //await getAaguidMetadata()\n    return aaguidMetadata[aaguid];\n}\nlet updatedAuthenticatorMetadata = null;\n/**\n * Updates the built-in metadata according to raw data available at https://mds.fidoalliance.org/\n * This service delivers a list of AAGUIDs encoded as a JWT.\n * Kept for compatibility purposes.\n * @deprecated\n */\nasync function updateDevicesMetadata() {\n    // this function is rather resource intensive and time consuming\n    // therefore, the result is cached in local storage\n    const jwt = await (await fetch(\"https://mds.fidoalliance.org\")).text();\n    // the response is a JWT including all AAGUIDs and their metadata\n    console.debug(jwt);\n    // let us ignore the JWT verification, since this is solely for descriptive purposes, not signed data\n    const payload = jwt.split('.')[1].replaceAll('-', '+').replaceAll('_', '/');\n    const json = JSON.parse(atob(payload));\n    console.debug(json);\n    let aaguidMetadata = {};\n    for (const e of json.entries) {\n        if (!e.aaguid || !e.metadataStatement)\n            continue;\n        aaguidMetadata[e.aaguid] = e.metadataStatement.description;\n    }\n    console.debug(aaguidMetadata);\n    updatedAuthenticatorMetadata = aaguidMetadata;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBhc3N3b3JkbGVzcy1pZC93ZWJhdXRobi9kaXN0L2VzbS9hdXRoZW50aWNhdG9ycy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBbUU7QUFDL0I7QUFDN0I7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGtEQUFpQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdEO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLDRFQUFxQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLGlEQUFpRDtBQUNqRDtBQUNBO0FBQ0EsaUJBQWlCLGtEQUFpQjtBQUNsQztBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCwyREFBMkQsNEVBQXFCLEVBQUU7QUFDbEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFydC13YWxsZXQtY2xpZW50Ly4vbm9kZV9tb2R1bGVzL0BwYXNzd29yZGxlc3MtaWQvd2ViYXV0aG4vZGlzdC9lc20vYXV0aGVudGljYXRvcnMuanM/NWUxNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhdXRoZW50aWNhdG9yTWV0YWRhdGEgfSBmcm9tICcuL2F1dGhlbnRpY2F0b3JNZXRhZGF0YS5qcyc7XG5pbXBvcnQgKiBhcyB1dGlscyBmcm9tICcuL3V0aWxzLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUF1dGhCdWZmZXIoYXV0aERhdGEpIHtcbiAgICAvL2NvbnNvbGUuZGVidWcoYXV0aERhdGEpXG4gICAgbGV0IGZsYWdzID0gbmV3IERhdGFWaWV3KGF1dGhEYXRhLnNsaWNlKDMyLCAzMykpLmdldFVpbnQ4KDApO1xuICAgIC8vY29uc29sZS5kZWJ1ZyhmbGFncylcbiAgICAvLyBodHRwczovL3czYy5naXRodWIuaW8vd2ViYXV0aG4vI3NjdG4tYXV0aGVudGljYXRvci1kYXRhXG4gICAgbGV0IHBhcnNlZCA9IHtcbiAgICAgICAgcnBJZEhhc2g6IHV0aWxzLnRvQmFzZTY0dXJsKGF1dGhEYXRhLnNsaWNlKDAsIDMyKSksXG4gICAgICAgIGZsYWdzOiB7XG4gICAgICAgICAgICB1c2VyUHJlc2VudDogISEoZmxhZ3MgJiAxKSxcbiAgICAgICAgICAgIC8vcmVzZXJ2ZWQxOiAhIShmbGFncyAmIDIpLFxuICAgICAgICAgICAgdXNlclZlcmlmaWVkOiAhIShmbGFncyAmIDQpLFxuICAgICAgICAgICAgYmFja3VwRWxpZ2liaWxpdHk6ICEhKGZsYWdzICYgOCksXG4gICAgICAgICAgICBiYWNrdXBTdGF0ZTogISEoZmxhZ3MgJiAxNiksXG4gICAgICAgICAgICAvL3Jlc2VydmVkMjogISEoZmxhZ3MgJiAzMiksXG4gICAgICAgICAgICBhdHRlc3RlZERhdGE6ICEhKGZsYWdzICYgNjQpLFxuICAgICAgICAgICAgZXh0ZW5zaW9uc0luY2x1ZGVkOiAhIShmbGFncyAmIDEyOClcbiAgICAgICAgfSxcbiAgICAgICAgY291bnRlcjogbmV3IERhdGFWaWV3KGF1dGhEYXRhLnNsaWNlKDMzLCAzNykpLmdldFVpbnQzMigwLCBmYWxzZSksIC8vIEJpZy1FbmRpYW4hXG4gICAgfTtcbiAgICAvLyB0aGlzIGlzIG1vcmUgZGVzY3JpcHRpdmUgdGhhbiBcImJhY2t1cFN0YXRlXCJcbiAgICBwYXJzZWQuc3luY2VkID0gcGFyc2VkLmZsYWdzLmJhY2t1cFN0YXRlO1xuICAgIGlmIChhdXRoRGF0YS5ieXRlTGVuZ3RoID4gMzcpIHtcbiAgICAgICAgLy8gcmVnaXN0cmF0aW9uIGNvbnRhaW5zIGFkZGl0aW9uYWwgZGF0YVxuICAgICAgICBjb25zdCBhYWd1aWQgPSBleHRyYWN0QWFndWlkKGF1dGhEYXRhKTsgLy8gYnl0ZXMgMzctPjUzXG4gICAgICAgIC8vIGh0dHBzOi8vdzNjLmdpdGh1Yi5pby93ZWJhdXRobi8jYXR0ZXN0ZWQtY3JlZGVudGlhbC1kYXRhXG4gICAgICAgIHBhcnNlZCA9IHtcbiAgICAgICAgICAgIC4uLnBhcnNlZCxcbiAgICAgICAgICAgIGFhZ3VpZCxcbiAgICAgICAgICAgIG5hbWU6IGF1dGhlbnRpY2F0b3JNZXRhZGF0YVthYWd1aWRdID8/ICdVbmtub3duJyxcbiAgICAgICAgICAgIGljb25fbGlnaHQ6ICdodHRwczovL3dlYmF1dGhuLnBhc3N3b3JkbGVzcy5pZC9hdXRoZW50aWNhdG9ycy8nICsgYWFndWlkICsgJy1saWdodC5wbmcnLFxuICAgICAgICAgICAgaWNvbl9kYXJrOiAnaHR0cHM6Ly93ZWJhdXRobi5wYXNzd29yZGxlc3MuaWQvYXV0aGVudGljYXRvcnMvJyArIGFhZ3VpZCArICctZGFyay5wbmcnLFxuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4gcGFyc2VkO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGV4dHJhY3RBYWd1aWQoYXV0aERhdGEpIHtcbiAgICByZXR1cm4gZm9ybWF0QWFndWlkKGF1dGhEYXRhLnNsaWNlKDM3LCA1MykpOyAvLyAxNiBieXRlc1xufVxuZnVuY3Rpb24gZm9ybWF0QWFndWlkKGJ1ZmZlcikge1xuICAgIGxldCBhYWd1aWQgPSB1dGlscy5idWZmZXJUb0hleChidWZmZXIpO1xuICAgIGFhZ3VpZCA9IGFhZ3VpZC5zdWJzdHJpbmcoMCwgOCkgKyAnLScgKyBhYWd1aWQuc3Vic3RyaW5nKDgsIDEyKSArICctJyArIGFhZ3VpZC5zdWJzdHJpbmcoMTIsIDE2KSArICctJyArIGFhZ3VpZC5zdWJzdHJpbmcoMTYsIDIwKSArICctJyArIGFhZ3VpZC5zdWJzdHJpbmcoMjAsIDMyKTtcbiAgICByZXR1cm4gYWFndWlkOyAvLyBleGFtcGxlOiBcImQ0MWY1YTY5LWI4MTctNDE0NC1hMTNjLTllYmQ2ZDkyNTRkNlwiXG59XG4vKipcbiAqIEtlcHQgZm9yIGNvbXBhdGliaWxpdHkgcHVycG9zZXMuXG4gKiBAZGVwcmVjYXRlZFxuICovXG5leHBvcnQgZnVuY3Rpb24gcmVzb2x2ZUF1dGhlbnRpY2F0b3JOYW1lKGFhZ3VpZCkge1xuICAgIGNvbnN0IGFhZ3VpZE1ldGFkYXRhID0gdXBkYXRlZEF1dGhlbnRpY2F0b3JNZXRhZGF0YSA/PyBhdXRoZW50aWNhdG9yTWV0YWRhdGE7IC8vYXdhaXQgZ2V0QWFndWlkTWV0YWRhdGEoKVxuICAgIHJldHVybiBhYWd1aWRNZXRhZGF0YVthYWd1aWRdO1xufVxubGV0IHVwZGF0ZWRBdXRoZW50aWNhdG9yTWV0YWRhdGEgPSBudWxsO1xuLyoqXG4gKiBVcGRhdGVzIHRoZSBidWlsdC1pbiBtZXRhZGF0YSBhY2NvcmRpbmcgdG8gcmF3IGRhdGEgYXZhaWxhYmxlIGF0IGh0dHBzOi8vbWRzLmZpZG9hbGxpYW5jZS5vcmcvXG4gKiBUaGlzIHNlcnZpY2UgZGVsaXZlcnMgYSBsaXN0IG9mIEFBR1VJRHMgZW5jb2RlZCBhcyBhIEpXVC5cbiAqIEtlcHQgZm9yIGNvbXBhdGliaWxpdHkgcHVycG9zZXMuXG4gKiBAZGVwcmVjYXRlZFxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gdXBkYXRlRGV2aWNlc01ldGFkYXRhKCkge1xuICAgIC8vIHRoaXMgZnVuY3Rpb24gaXMgcmF0aGVyIHJlc291cmNlIGludGVuc2l2ZSBhbmQgdGltZSBjb25zdW1pbmdcbiAgICAvLyB0aGVyZWZvcmUsIHRoZSByZXN1bHQgaXMgY2FjaGVkIGluIGxvY2FsIHN0b3JhZ2VcbiAgICBjb25zdCBqd3QgPSBhd2FpdCAoYXdhaXQgZmV0Y2goXCJodHRwczovL21kcy5maWRvYWxsaWFuY2Uub3JnXCIpKS50ZXh0KCk7XG4gICAgLy8gdGhlIHJlc3BvbnNlIGlzIGEgSldUIGluY2x1ZGluZyBhbGwgQUFHVUlEcyBhbmQgdGhlaXIgbWV0YWRhdGFcbiAgICBjb25zb2xlLmRlYnVnKGp3dCk7XG4gICAgLy8gbGV0IHVzIGlnbm9yZSB0aGUgSldUIHZlcmlmaWNhdGlvbiwgc2luY2UgdGhpcyBpcyBzb2xlbHkgZm9yIGRlc2NyaXB0aXZlIHB1cnBvc2VzLCBub3Qgc2lnbmVkIGRhdGFcbiAgICBjb25zdCBwYXlsb2FkID0gand0LnNwbGl0KCcuJylbMV0ucmVwbGFjZUFsbCgnLScsICcrJykucmVwbGFjZUFsbCgnXycsICcvJyk7XG4gICAgY29uc3QganNvbiA9IEpTT04ucGFyc2UoYXRvYihwYXlsb2FkKSk7XG4gICAgY29uc29sZS5kZWJ1Zyhqc29uKTtcbiAgICBsZXQgYWFndWlkTWV0YWRhdGEgPSB7fTtcbiAgICBmb3IgKGNvbnN0IGUgb2YganNvbi5lbnRyaWVzKSB7XG4gICAgICAgIGlmICghZS5hYWd1aWQgfHwgIWUubWV0YWRhdGFTdGF0ZW1lbnQpXG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgYWFndWlkTWV0YWRhdGFbZS5hYWd1aWRdID0gZS5tZXRhZGF0YVN0YXRlbWVudC5kZXNjcmlwdGlvbjtcbiAgICB9XG4gICAgY29uc29sZS5kZWJ1ZyhhYWd1aWRNZXRhZGF0YSk7XG4gICAgdXBkYXRlZEF1dGhlbnRpY2F0b3JNZXRhZGF0YSA9IGFhZ3VpZE1ldGFkYXRhO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/authenticators.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/client.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@passwordless-id/webauthn/dist/esm/client.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authenticate: () => (/* binding */ authenticate),\n/* harmony export */   isAvailable: () => (/* binding */ isAvailable),\n/* harmony export */   isLocalAuthenticator: () => (/* binding */ isLocalAuthenticator),\n/* harmony export */   register: () => (/* binding */ register)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/utils.js\");\n\n/**\n * Returns whether passwordless authentication is available on this browser/platform or not.\n */\nfunction isAvailable() {\n    return !!window.PublicKeyCredential;\n}\n/**\n * Returns whether the device itself can be used as authenticator.\n */\nasync function isLocalAuthenticator() {\n    return await PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable();\n}\nasync function getAuthAttachment(authType) {\n    if (authType === \"local\")\n        return \"platform\";\n    if (authType === \"roaming\" || authType === \"extern\")\n        return \"cross-platform\";\n    if (authType === \"both\")\n        return undefined; // The webauthn protocol considers `null` as invalid but `undefined` as \"both\"!\n    // the default case: \"auto\", depending on device capabilities\n    try {\n        if (await isLocalAuthenticator())\n            return \"platform\";\n        else\n            return \"cross-platform\";\n    }\n    catch (e) {\n        // might happen due to some security policies\n        // see https://w3c.github.io/webauthn/#sctn-isUserVerifyingPlatformAuthenticatorAvailable\n        return undefined; // The webauthn protocol considers `null` as invalid but `undefined` as \"both\"!\n    }\n}\nfunction getAlgoName(num) {\n    switch (num) {\n        case -7: return \"ES256\";\n        // case -8 ignored to to its rarity\n        case -257: return \"RS256\";\n        default: throw new Error(`Unknown algorithm code: ${num}`);\n    }\n}\n/**\n * Creates a cryptographic key pair, in order to register the public key for later passwordless authentication.\n *\n * @param {string} username\n * @param {string} challenge A server-side randomly generated string.\n * @param {Object} [options] Optional parameters.\n * @param {number} [options.timeout=60000] Number of milliseconds the user has to respond to the biometric/PIN check.\n * @param {'required'|'preferred'|'discouraged'} [options.userVerification='required'] Whether to prompt for biometric/PIN check or not.\n * @param {'auto'|'local'|'roaming'|'both'}       [options.authenticatorType='auto'] Which device to use as authenticator.\n *          'auto': if the local device can be used as authenticator it will be preferred. Otherwise it will prompt for a roaming device.\n *          'local': use the local device (using TouchID, FaceID, Windows Hello or PIN)\n *          'roaming': use a roaming device (security key or connected phone)\n *          'both': prompt the user to choose between local or roaming device. The UI and user interaction in this case is platform specific.\n * @param {boolean} [options.attestation=false] If enabled, the device attestation and clientData will be provided as Base64url encoded binary data.\n *                                Note that this is not available on some platforms.\n * @param {'discouraged'|'preferred'|'required'} [options.discoverable] A \"discoverable\" credential can be selected using `authenticate(...)` without providing credential IDs.\n *              Instead, a native pop-up will appear for user selection.\n *              This may have an impact on the \"passkeys\" user experience and syncing behavior of the key.\n */\nasync function register(username, challenge, options) {\n    options = options ?? {};\n    if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__.isBase64url(challenge))\n        throw new Error('Provided challenge is not properly encoded in Base64url');\n    const creationOptions = {\n        challenge: _utils_js__WEBPACK_IMPORTED_MODULE_0__.parseBase64url(challenge),\n        rp: {\n            id: window.location.hostname,\n            name: window.location.hostname\n        },\n        user: {\n            id: options.userHandle ? _utils_js__WEBPACK_IMPORTED_MODULE_0__.toBuffer(options.userHandle) : await _utils_js__WEBPACK_IMPORTED_MODULE_0__.sha256(new TextEncoder().encode('passwordless.id-user:' + username)),\n            name: username,\n            displayName: username,\n        },\n        pubKeyCredParams: [\n            { alg: -7, type: \"public-key\" },\n            { alg: -257, type: \"public-key\" }, // RS256 (for Windows Hello and others)\n        ],\n        timeout: options.timeout ?? 60000,\n        authenticatorSelection: {\n            userVerification: options.userVerification ?? \"required\",\n            authenticatorAttachment: await getAuthAttachment(options.authenticatorType ?? \"auto\"),\n            residentKey: options.discoverable ?? 'preferred',\n            requireResidentKey: (options.discoverable === 'required') // mainly for backwards compatibility, see https://www.w3.org/TR/webauthn/#dictionary-authenticatorSelection\n        },\n        attestation: \"direct\"\n    };\n    if (options.debug)\n        console.debug(creationOptions);\n    const credential = await navigator.credentials.create({ publicKey: creationOptions }); //PublicKeyCredential\n    if (options.debug)\n        console.debug(credential);\n    const response = credential.response; // AuthenticatorAttestationResponse\n    let registration = {\n        username: username,\n        credential: {\n            id: credential.id,\n            publicKey: _utils_js__WEBPACK_IMPORTED_MODULE_0__.toBase64url(response.getPublicKey()),\n            algorithm: getAlgoName(credential.response.getPublicKeyAlgorithm())\n        },\n        authenticatorData: _utils_js__WEBPACK_IMPORTED_MODULE_0__.toBase64url(response.getAuthenticatorData()),\n        clientData: _utils_js__WEBPACK_IMPORTED_MODULE_0__.toBase64url(response.clientDataJSON),\n    };\n    if (options.attestation) {\n        registration.attestationData = _utils_js__WEBPACK_IMPORTED_MODULE_0__.toBase64url(response.attestationObject);\n    }\n    return registration;\n}\nasync function getTransports(authType) {\n    const local = ['internal'];\n    // 'hybrid' was added mid-2022 in the specs and currently not yet available in the official dom types\n    // @ts-ignore\n    const roaming = ['hybrid', 'usb', 'ble', 'nfc'];\n    if (authType === \"local\")\n        return local;\n    if (authType == \"roaming\" || authType === \"extern\")\n        return roaming;\n    if (authType === \"both\")\n        return [...local, ...roaming];\n    // the default case: \"auto\", depending on device capabilities\n    try {\n        if (await isLocalAuthenticator())\n            return local;\n        else\n            return roaming;\n    }\n    catch (e) {\n        return [...local, ...roaming];\n    }\n}\n/**\n * Signs a challenge using one of the provided credentials IDs in order to authenticate the user.\n *\n * @param {string[]} credentialIds The list of credential IDs that can be used for signing.\n * @param {string} challenge A server-side randomly generated string, the base64 encoded version will be signed.\n * @param {Object} [options] Optional parameters.\n * @param {number} [options.timeout=60000] Number of milliseconds the user has to respond to the biometric/PIN check.\n * @param {'required'|'preferred'|'discouraged'} [options.userVerification='required'] Whether to prompt for biometric/PIN check or not.\n * @param {'optional'|'conditional'|'required'|'silent'} [options.mediation='optional'] https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/get#mediation\n */\nasync function authenticate(credentialIds, challenge, options) {\n    options = options ?? {};\n    if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__.isBase64url(challenge))\n        throw new Error('Provided challenge is not properly encoded in Base64url');\n    const transports = await getTransports(options.authenticatorType ?? \"auto\");\n    let authOptions = {\n        challenge: _utils_js__WEBPACK_IMPORTED_MODULE_0__.parseBase64url(challenge),\n        rpId: window.location.hostname,\n        allowCredentials: credentialIds.map(id => {\n            return {\n                id: _utils_js__WEBPACK_IMPORTED_MODULE_0__.parseBase64url(id),\n                type: 'public-key',\n                transports: transports,\n            };\n        }),\n        userVerification: options.userVerification ?? \"required\",\n        timeout: options.timeout ?? 60000,\n    };\n    if (options.debug)\n        console.debug(authOptions);\n    let auth = await navigator.credentials.get({ publicKey: authOptions, mediation: options.mediation });\n    if (options.debug)\n        console.debug(auth);\n    const response = auth.response;\n    const authentication = {\n        credentialId: auth.id,\n        authenticatorData: _utils_js__WEBPACK_IMPORTED_MODULE_0__.toBase64url(response.authenticatorData),\n        clientData: _utils_js__WEBPACK_IMPORTED_MODULE_0__.toBase64url(response.clientDataJSON),\n        signature: _utils_js__WEBPACK_IMPORTED_MODULE_0__.toBase64url(response.signature),\n        userHandle: response.userHandle ? _utils_js__WEBPACK_IMPORTED_MODULE_0__.toBase64url(response.userHandle) : undefined // may not be returned by every authenticator\n    };\n    return authentication;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@passwordless-id/webauthn/dist/esm/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authenticatorMetadata: () => (/* reexport safe */ _authenticatorMetadata_js__WEBPACK_IMPORTED_MODULE_4__.authenticatorMetadata),\n/* harmony export */   client: () => (/* reexport module object */ _client_js__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   parsers: () => (/* reexport module object */ _parsers_js__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   server: () => (/* reexport module object */ _server_js__WEBPACK_IMPORTED_MODULE_1__),\n/* harmony export */   utils: () => (/* reexport module object */ _utils_js__WEBPACK_IMPORTED_MODULE_3__)\n/* harmony export */ });\n/* harmony import */ var _client_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./client.js */ \"(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/client.js\");\n/* harmony import */ var _server_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./server.js */ \"(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/server.js\");\n/* harmony import */ var _parsers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./parsers.js */ \"(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/parsers.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/utils.js\");\n/* harmony import */ var _authenticatorMetadata_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./authenticatorMetadata.js */ \"(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/authenticatorMetadata.js\");\n/*\nexport * from './types'\nexport * from './webauthn'\nexport * from './parsers'\nexport * from './validation'\n*/\n\n\n\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({ client: _client_js__WEBPACK_IMPORTED_MODULE_0__, server: _server_js__WEBPACK_IMPORTED_MODULE_1__, parsers: _parsers_js__WEBPACK_IMPORTED_MODULE_2__, utils: _utils_js__WEBPACK_IMPORTED_MODULE_3__, authenticatorMetadata: _authenticatorMetadata_js__WEBPACK_IMPORTED_MODULE_4__.authenticatorMetadata });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBhc3N3b3JkbGVzcy1pZC93ZWJhdXRobi9kaXN0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNzQztBQUNBO0FBQ0U7QUFDSjtBQUMrQjtBQUNGO0FBQ2pFLGlFQUFlLEVBQUUsTUFBTSxpREFBUSxrREFBUyxpREFBTywrREFBdUIsZ0ZBQUUsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NtYXJ0LXdhbGxldC1jbGllbnQvLi9ub2RlX21vZHVsZXMvQHBhc3N3b3JkbGVzcy1pZC93ZWJhdXRobi9kaXN0L2VzbS9pbmRleC5qcz9jYTY2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5leHBvcnQgKiBmcm9tICcuL3R5cGVzJ1xuZXhwb3J0ICogZnJvbSAnLi93ZWJhdXRobidcbmV4cG9ydCAqIGZyb20gJy4vcGFyc2VycydcbmV4cG9ydCAqIGZyb20gJy4vdmFsaWRhdGlvbidcbiovXG5pbXBvcnQgKiBhcyBjbGllbnQgZnJvbSAnLi9jbGllbnQuanMnO1xuaW1wb3J0ICogYXMgc2VydmVyIGZyb20gJy4vc2VydmVyLmpzJztcbmltcG9ydCAqIGFzIHBhcnNlcnMgZnJvbSAnLi9wYXJzZXJzLmpzJztcbmltcG9ydCAqIGFzIHV0aWxzIGZyb20gJy4vdXRpbHMuanMnO1xuaW1wb3J0IHsgYXV0aGVudGljYXRvck1ldGFkYXRhIH0gZnJvbSAnLi9hdXRoZW50aWNhdG9yTWV0YWRhdGEuanMnO1xuZXhwb3J0IHsgY2xpZW50LCBzZXJ2ZXIsIHBhcnNlcnMsIHV0aWxzLCBhdXRoZW50aWNhdG9yTWV0YWRhdGEgfTtcbmV4cG9ydCBkZWZhdWx0IHsgY2xpZW50LCBzZXJ2ZXIsIHBhcnNlcnMsIHV0aWxzLCBhdXRoZW50aWNhdG9yTWV0YWRhdGEgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/parsers.js":
/*!********************************************************************!*\
  !*** ./node_modules/@passwordless-id/webauthn/dist/esm/parsers.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseAttestation: () => (/* binding */ parseAttestation),\n/* harmony export */   parseAuthentication: () => (/* binding */ parseAuthentication),\n/* harmony export */   parseAuthenticator: () => (/* binding */ parseAuthenticator),\n/* harmony export */   parseClient: () => (/* binding */ parseClient),\n/* harmony export */   parseRegistration: () => (/* binding */ parseRegistration)\n/* harmony export */ });\n/* harmony import */ var _authenticators_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./authenticators.js */ \"(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/authenticators.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/utils.js\");\n\n\nconst utf8Decoder = new TextDecoder('utf-8');\nfunction parseClient(data) {\n    if (typeof data == 'string')\n        data = _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseBase64url(data);\n    return JSON.parse(utf8Decoder.decode(data));\n}\nfunction parseAuthenticator(data) {\n    if (typeof data == 'string')\n        data = _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseBase64url(data);\n    return _authenticators_js__WEBPACK_IMPORTED_MODULE_0__.parseAuthBuffer(data);\n}\nfunction parseAttestation(data) {\n    //if(typeof data == 'string')\n    //    data = utils.parseBase64url(data)\n    // Useless comment, let's at least provide the raw value \n    // return \"The device attestation proves the authenticity of the device model / aaguid. It's not guaranteed to be included and really complex to parse / verify. Good luck with that one!\"\n    return data;\n}\nfunction parseRegistration(registration) {\n    return {\n        username: registration.username,\n        credential: registration.credential,\n        client: parseClient(registration.clientData),\n        authenticator: parseAuthenticator(registration.authenticatorData),\n        attestation: registration.attestationData ? parseAttestation(registration.attestationData) : null\n    };\n}\nfunction parseAuthentication(authentication) {\n    return {\n        credentialId: authentication.credentialId,\n        client: parseClient(authentication.clientData),\n        authenticator: parseAuthenticator(authentication.authenticatorData),\n        signature: authentication.signature\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBhc3N3b3JkbGVzcy1pZC93ZWJhdXRobi9kaXN0L2VzbS9wYXJzZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBc0Q7QUFDbEI7QUFDcEM7QUFDTztBQUNQO0FBQ0EsZUFBZSxxREFBb0I7QUFDbkM7QUFDQTtBQUNPO0FBQ1A7QUFDQSxlQUFlLHFEQUFvQjtBQUNuQyxXQUFXLCtEQUE4QjtBQUN6QztBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3NtYXJ0LXdhbGxldC1jbGllbnQvLi9ub2RlX21vZHVsZXMvQHBhc3N3b3JkbGVzcy1pZC93ZWJhdXRobi9kaXN0L2VzbS9wYXJzZXJzLmpzPzMzYWYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgYXV0aGVudGljYXRvcnMgZnJvbSAnLi9hdXRoZW50aWNhdG9ycy5qcyc7XG5pbXBvcnQgKiBhcyB1dGlscyBmcm9tICcuL3V0aWxzLmpzJztcbmNvbnN0IHV0ZjhEZWNvZGVyID0gbmV3IFRleHREZWNvZGVyKCd1dGYtOCcpO1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlQ2xpZW50KGRhdGEpIHtcbiAgICBpZiAodHlwZW9mIGRhdGEgPT0gJ3N0cmluZycpXG4gICAgICAgIGRhdGEgPSB1dGlscy5wYXJzZUJhc2U2NHVybChkYXRhKTtcbiAgICByZXR1cm4gSlNPTi5wYXJzZSh1dGY4RGVjb2Rlci5kZWNvZGUoZGF0YSkpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlQXV0aGVudGljYXRvcihkYXRhKSB7XG4gICAgaWYgKHR5cGVvZiBkYXRhID09ICdzdHJpbmcnKVxuICAgICAgICBkYXRhID0gdXRpbHMucGFyc2VCYXNlNjR1cmwoZGF0YSk7XG4gICAgcmV0dXJuIGF1dGhlbnRpY2F0b3JzLnBhcnNlQXV0aEJ1ZmZlcihkYXRhKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUF0dGVzdGF0aW9uKGRhdGEpIHtcbiAgICAvL2lmKHR5cGVvZiBkYXRhID09ICdzdHJpbmcnKVxuICAgIC8vICAgIGRhdGEgPSB1dGlscy5wYXJzZUJhc2U2NHVybChkYXRhKVxuICAgIC8vIFVzZWxlc3MgY29tbWVudCwgbGV0J3MgYXQgbGVhc3QgcHJvdmlkZSB0aGUgcmF3IHZhbHVlIFxuICAgIC8vIHJldHVybiBcIlRoZSBkZXZpY2UgYXR0ZXN0YXRpb24gcHJvdmVzIHRoZSBhdXRoZW50aWNpdHkgb2YgdGhlIGRldmljZSBtb2RlbCAvIGFhZ3VpZC4gSXQncyBub3QgZ3VhcmFudGVlZCB0byBiZSBpbmNsdWRlZCBhbmQgcmVhbGx5IGNvbXBsZXggdG8gcGFyc2UgLyB2ZXJpZnkuIEdvb2QgbHVjayB3aXRoIHRoYXQgb25lIVwiXG4gICAgcmV0dXJuIGRhdGE7XG59XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VSZWdpc3RyYXRpb24ocmVnaXN0cmF0aW9uKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdXNlcm5hbWU6IHJlZ2lzdHJhdGlvbi51c2VybmFtZSxcbiAgICAgICAgY3JlZGVudGlhbDogcmVnaXN0cmF0aW9uLmNyZWRlbnRpYWwsXG4gICAgICAgIGNsaWVudDogcGFyc2VDbGllbnQocmVnaXN0cmF0aW9uLmNsaWVudERhdGEpLFxuICAgICAgICBhdXRoZW50aWNhdG9yOiBwYXJzZUF1dGhlbnRpY2F0b3IocmVnaXN0cmF0aW9uLmF1dGhlbnRpY2F0b3JEYXRhKSxcbiAgICAgICAgYXR0ZXN0YXRpb246IHJlZ2lzdHJhdGlvbi5hdHRlc3RhdGlvbkRhdGEgPyBwYXJzZUF0dGVzdGF0aW9uKHJlZ2lzdHJhdGlvbi5hdHRlc3RhdGlvbkRhdGEpIDogbnVsbFxuICAgIH07XG59XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VBdXRoZW50aWNhdGlvbihhdXRoZW50aWNhdGlvbikge1xuICAgIHJldHVybiB7XG4gICAgICAgIGNyZWRlbnRpYWxJZDogYXV0aGVudGljYXRpb24uY3JlZGVudGlhbElkLFxuICAgICAgICBjbGllbnQ6IHBhcnNlQ2xpZW50KGF1dGhlbnRpY2F0aW9uLmNsaWVudERhdGEpLFxuICAgICAgICBhdXRoZW50aWNhdG9yOiBwYXJzZUF1dGhlbnRpY2F0b3IoYXV0aGVudGljYXRpb24uYXV0aGVudGljYXRvckRhdGEpLFxuICAgICAgICBzaWduYXR1cmU6IGF1dGhlbnRpY2F0aW9uLnNpZ25hdHVyZVxuICAgIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/parsers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/server.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@passwordless-id/webauthn/dist/esm/server.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyAuthentication: () => (/* binding */ verifyAuthentication),\n/* harmony export */   verifyRegistration: () => (/* binding */ verifyRegistration),\n/* harmony export */   verifySignature: () => (/* binding */ verifySignature)\n/* harmony export */ });\n/* harmony import */ var _parsers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parsers.js */ \"(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/parsers.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/utils.js\");\n\n\nasync function isValid(validator, value) {\n    if (typeof validator === 'function') {\n        const res = validator(value);\n        if (res instanceof Promise)\n            return await res;\n        else\n            return res;\n    }\n    // the validator can be a single value too\n    return validator === value;\n}\nasync function isNotValid(validator, value) {\n    return !(await isValid(validator, value));\n}\nasync function verifyRegistration(registrationRaw, expected) {\n    const registration = (0,_parsers_js__WEBPACK_IMPORTED_MODULE_0__.parseRegistration)(registrationRaw);\n    registration.client.challenge;\n    if (registration.client.type !== \"webauthn.create\")\n        throw new Error(`Unexpected ClientData type: ${registration.client.type}`);\n    if (await isNotValid(expected.origin, registration.client.origin))\n        throw new Error(`Unexpected ClientData origin: ${registration.client.origin}`);\n    if (await isNotValid(expected.challenge, registration.client.challenge))\n        throw new Error(`Unexpected ClientData challenge: ${registration.client.challenge}`);\n    return registration;\n}\nasync function verifyAuthentication(authenticationRaw, credential, expected) {\n    if (authenticationRaw.credentialId !== credential.id)\n        throw new Error(`Credential ID mismatch: ${authenticationRaw.credentialId} vs ${credential.id}`);\n    const isValidSignature = await verifySignature({\n        algorithm: credential.algorithm,\n        publicKey: credential.publicKey,\n        authenticatorData: authenticationRaw.authenticatorData,\n        clientData: authenticationRaw.clientData,\n        signature: authenticationRaw.signature,\n        verbose: expected.verbose\n    });\n    if (!isValidSignature)\n        throw new Error(`Invalid signature: ${authenticationRaw.signature}`);\n    const authentication = (0,_parsers_js__WEBPACK_IMPORTED_MODULE_0__.parseAuthentication)(authenticationRaw);\n    if (authentication.client.type !== \"webauthn.get\")\n        throw new Error(`Unexpected clientData type: ${authentication.client.type}`);\n    if (await isNotValid(expected.origin, authentication.client.origin))\n        throw new Error(`Unexpected ClientData origin: ${authentication.client.origin}`);\n    if (await isNotValid(expected.challenge, authentication.client.challenge))\n        throw new Error(`Unexpected ClientData challenge: ${authentication.client.challenge}`);\n    // this only works because we consider `rp.origin` and `rp.id` to be the same during authentication/registration\n    const rpId = new URL(authentication.client.origin).hostname;\n    const expectedRpIdHash = _utils_js__WEBPACK_IMPORTED_MODULE_1__.toBase64url(await _utils_js__WEBPACK_IMPORTED_MODULE_1__.sha256(_utils_js__WEBPACK_IMPORTED_MODULE_1__.toBuffer(rpId)));\n    if (authentication.authenticator.rpIdHash !== expectedRpIdHash)\n        throw new Error(`Unexpected RpIdHash: ${authentication.authenticator.rpIdHash} vs ${expectedRpIdHash}`);\n    if (!authentication.authenticator.flags.userPresent)\n        throw new Error(`Unexpected authenticator flags: missing userPresent`);\n    if (!authentication.authenticator.flags.userVerified && expected.userVerified)\n        throw new Error(`Unexpected authenticator flags: missing userVerified`);\n    if (expected.counter && authentication.authenticator.counter <= expected.counter)\n        throw new Error(`Unexpected authenticator counter: ${authentication.authenticator.counter} (should be > ${expected.counter})`);\n    return authentication;\n}\n// https://w3c.github.io/webauthn/#sctn-public-key-easy\n// https://www.iana.org/assignments/cose/cose.xhtml#algorithms\n/*\nUser agents MUST be able to return a non-null value for getPublicKey() when the credential public key has a COSEAlgorithmIdentifier value of:\n\n-7 (ES256), where kty is 2 (with uncompressed points) and crv is 1 (P-256).\n\n-257 (RS256).\n\n-8 (EdDSA), where crv is 6 (Ed25519).\n*/\nfunction getAlgoParams(algorithm) {\n    switch (algorithm) {\n        case 'RS256':\n            return {\n                name: 'RSASSA-PKCS1-v1_5',\n                hash: 'SHA-256'\n            };\n        case 'ES256':\n            return {\n                name: 'ECDSA',\n                namedCurve: 'P-256',\n                hash: 'SHA-256',\n            };\n        // case 'EdDSA': Not supported by browsers\n        default:\n            throw new Error(`Unknown or unsupported crypto algorithm: ${algorithm}. Only 'RS256' and 'ES256' are supported.`);\n    }\n}\nasync function parseCryptoKey(algoParams, publicKey) {\n    const buffer = _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseBase64url(publicKey);\n    return crypto.subtle.importKey('spki', buffer, algoParams, false, ['verify']);\n}\n// https://w3c.github.io/webauthn/#sctn-verifying-assertion\n// https://w3c.github.io/webauthn/#sctn-signature-attestation-types\n/* Emphasis mine:\n\n6.5.6. Signature Formats for Packed Attestation, FIDO U2F Attestation, and **Assertion Signatures**\n\n[...] For COSEAlgorithmIdentifier -7 (ES256) [...] the sig value MUST be encoded as an ASN.1 [...]\n[...] For COSEAlgorithmIdentifier -257 (RS256) [...] The signature is not ASN.1 wrapped.\n[...] For COSEAlgorithmIdentifier -37 (PS256) [...] The signature is not ASN.1 wrapped.\n*/\n// see also https://gist.github.com/philholden/50120652bfe0498958fd5926694ba354\nasync function verifySignature({ algorithm, publicKey, authenticatorData, clientData, signature, verbose }) {\n    const algoParams = getAlgoParams(algorithm);\n    let cryptoKey = await parseCryptoKey(algoParams, publicKey);\n    if (verbose) {\n        console.debug(cryptoKey);\n    }\n    let clientHash = await _utils_js__WEBPACK_IMPORTED_MODULE_1__.sha256(_utils_js__WEBPACK_IMPORTED_MODULE_1__.parseBase64url(clientData));\n    // during \"login\", the authenticatorData is exactly 37 bytes\n    let comboBuffer = _utils_js__WEBPACK_IMPORTED_MODULE_1__.concatenateBuffers(_utils_js__WEBPACK_IMPORTED_MODULE_1__.parseBase64url(authenticatorData), clientHash);\n    if (verbose) {\n        console.debug('Crypto Algo: ' + JSON.stringify(algoParams));\n        console.debug('Public key: ' + publicKey);\n        console.debug('Data: ' + _utils_js__WEBPACK_IMPORTED_MODULE_1__.toBase64url(comboBuffer));\n        console.debug('Signature: ' + signature);\n    }\n    // https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/verify\n    let signatureBuffer = _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseBase64url(signature);\n    if (algorithm == 'ES256')\n        signatureBuffer = convertASN1toRaw(signatureBuffer);\n    const isValid = await crypto.subtle.verify(algoParams, cryptoKey, signatureBuffer, comboBuffer);\n    return isValid;\n}\nfunction convertASN1toRaw(signatureBuffer) {\n    // Convert signature from ASN.1 sequence to \"raw\" format\n    const usignature = new Uint8Array(signatureBuffer);\n    const rStart = usignature[4] === 0 ? 5 : 4;\n    const rEnd = rStart + 32;\n    const sStart = usignature[rEnd + 2] === 0 ? rEnd + 3 : rEnd + 2;\n    const r = usignature.slice(rStart, rEnd);\n    const s = usignature.slice(sStart);\n    return new Uint8Array([...r, ...s]);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/server.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/utils.js":
/*!******************************************************************!*\
  !*** ./node_modules/@passwordless-id/webauthn/dist/esm/utils.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bufferToHex: () => (/* binding */ bufferToHex),\n/* harmony export */   concatenateBuffers: () => (/* binding */ concatenateBuffers),\n/* harmony export */   isBase64url: () => (/* binding */ isBase64url),\n/* harmony export */   parseBase64url: () => (/* binding */ parseBase64url),\n/* harmony export */   parseBuffer: () => (/* binding */ parseBuffer),\n/* harmony export */   randomChallenge: () => (/* binding */ randomChallenge),\n/* harmony export */   sha256: () => (/* binding */ sha256),\n/* harmony export */   toBase64url: () => (/* binding */ toBase64url),\n/* harmony export */   toBuffer: () => (/* binding */ toBuffer)\n/* harmony export */ });\n/********************************\n     Encoding/Decoding Utils\n********************************/\nfunction randomChallenge() {\n    return crypto.randomUUID();\n}\nfunction toBuffer(txt) {\n    return Uint8Array.from(txt, c => c.charCodeAt(0)).buffer;\n}\nfunction parseBuffer(buffer) {\n    return String.fromCharCode(...new Uint8Array(buffer));\n}\nfunction isBase64url(txt) {\n    return txt.match(/^[a-zA-Z0-9\\-_]+=*$/) !== null;\n}\nfunction toBase64url(buffer) {\n    const txt = btoa(parseBuffer(buffer)); // base64\n    return txt.replaceAll('+', '-').replaceAll('/', '_');\n}\nfunction parseBase64url(txt) {\n    txt = txt.replaceAll('-', '+').replaceAll('_', '/'); // base64url -> base64\n    return toBuffer(atob(txt));\n}\nasync function sha256(buffer) {\n    return await crypto.subtle.digest('SHA-256', buffer);\n}\nfunction bufferToHex(buffer) {\n    return [...new Uint8Array(buffer)]\n        .map(b => b.toString(16).padStart(2, \"0\"))\n        .join(\"\");\n}\nfunction concatenateBuffers(buffer1, buffer2) {\n    var tmp = new Uint8Array(buffer1.byteLength + buffer2.byteLength);\n    tmp.set(new Uint8Array(buffer1), 0);\n    tmp.set(new Uint8Array(buffer2), buffer1.byteLength);\n    return tmp;\n}\n;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBhc3N3b3JkbGVzcy1pZC93ZWJhdXRobi9kaXN0L2VzbS91dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQLDJDQUEyQztBQUMzQztBQUNBO0FBQ087QUFDUCx5REFBeUQ7QUFDekQ7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3NtYXJ0LXdhbGxldC1jbGllbnQvLi9ub2RlX21vZHVsZXMvQHBhc3N3b3JkbGVzcy1pZC93ZWJhdXRobi9kaXN0L2VzbS91dGlscy5qcz9mNmNkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuICAgICBFbmNvZGluZy9EZWNvZGluZyBVdGlsc1xuKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5leHBvcnQgZnVuY3Rpb24gcmFuZG9tQ2hhbGxlbmdlKCkge1xuICAgIHJldHVybiBjcnlwdG8ucmFuZG9tVVVJRCgpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHRvQnVmZmVyKHR4dCkge1xuICAgIHJldHVybiBVaW50OEFycmF5LmZyb20odHh0LCBjID0+IGMuY2hhckNvZGVBdCgwKSkuYnVmZmVyO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlQnVmZmVyKGJ1ZmZlcikge1xuICAgIHJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKC4uLm5ldyBVaW50OEFycmF5KGJ1ZmZlcikpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzQmFzZTY0dXJsKHR4dCkge1xuICAgIHJldHVybiB0eHQubWF0Y2goL15bYS16QS1aMC05XFwtX10rPSokLykgIT09IG51bGw7XG59XG5leHBvcnQgZnVuY3Rpb24gdG9CYXNlNjR1cmwoYnVmZmVyKSB7XG4gICAgY29uc3QgdHh0ID0gYnRvYShwYXJzZUJ1ZmZlcihidWZmZXIpKTsgLy8gYmFzZTY0XG4gICAgcmV0dXJuIHR4dC5yZXBsYWNlQWxsKCcrJywgJy0nKS5yZXBsYWNlQWxsKCcvJywgJ18nKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUJhc2U2NHVybCh0eHQpIHtcbiAgICB0eHQgPSB0eHQucmVwbGFjZUFsbCgnLScsICcrJykucmVwbGFjZUFsbCgnXycsICcvJyk7IC8vIGJhc2U2NHVybCAtPiBiYXNlNjRcbiAgICByZXR1cm4gdG9CdWZmZXIoYXRvYih0eHQpKTtcbn1cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzaGEyNTYoYnVmZmVyKSB7XG4gICAgcmV0dXJuIGF3YWl0IGNyeXB0by5zdWJ0bGUuZGlnZXN0KCdTSEEtMjU2JywgYnVmZmVyKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBidWZmZXJUb0hleChidWZmZXIpIHtcbiAgICByZXR1cm4gWy4uLm5ldyBVaW50OEFycmF5KGJ1ZmZlcildXG4gICAgICAgIC5tYXAoYiA9PiBiLnRvU3RyaW5nKDE2KS5wYWRTdGFydCgyLCBcIjBcIikpXG4gICAgICAgIC5qb2luKFwiXCIpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNvbmNhdGVuYXRlQnVmZmVycyhidWZmZXIxLCBidWZmZXIyKSB7XG4gICAgdmFyIHRtcCA9IG5ldyBVaW50OEFycmF5KGJ1ZmZlcjEuYnl0ZUxlbmd0aCArIGJ1ZmZlcjIuYnl0ZUxlbmd0aCk7XG4gICAgdG1wLnNldChuZXcgVWludDhBcnJheShidWZmZXIxKSwgMCk7XG4gICAgdG1wLnNldChuZXcgVWludDhBcnJheShidWZmZXIyKSwgYnVmZmVyMS5ieXRlTGVuZ3RoKTtcbiAgICByZXR1cm4gdG1wO1xufVxuO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/utils.js\n");

/***/ })

};
;